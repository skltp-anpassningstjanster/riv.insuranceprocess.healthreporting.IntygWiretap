<?xml version="1.0" encoding="utf-8"?>

<mule xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:https="http://www.mulesoft.org/schema/mule/https"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">
	
    <flow name="notify-1-service" doc:name="notify-1-service">
        <jms:inbound-endpoint 
            connector-ref="soitoolkit-jms-connector"
            queue="${WIRETAP_1_QUEUE}" 
            doc:name="JMS Queue">
            <jms:transaction action="ALWAYS_BEGIN"/>
        </jms:inbound-endpoint>

		<!--  Set the name of this wiretap service for logging purposes -->
		<set-variable variableName="wiretap-name" value="${WIRETAP_1_NAME}" doc:name="Set name"/>

		<!--  Log incoming request now when the wiretap-name is set -->
		<transformer ref="logMsgIn" doc:name="Transformer Reference"/>

 		<set-property propertyName="x-rivta-original-serviceconsumer-hsaid" value="${WIRETAP_ORIGINAL_HSA_ID}" doc:name="x-rivta-original-serviceconsumer-hsaid" />

		<custom-transformer  class="se.skltp.services.anp.intyg.wiretap.LogicalAddressTransformer" doc:name="Java">
			<spring:property
            	name="newLogicalAddress"
            	value="${WIRETAP_1_NOTIFY_OUTBOUND_LOGICAL_ADDRESS}" />
		</custom-transformer>
		
		<!-- Save the payload before sending it -->
		<set-variable variableName="request" value="#[payload]" doc:name="Save Request"/>

		<!-- Used for testing -->
<!--         <http:outbound-endpoint  -->
<!--             connector-ref="soitoolkit-http-connector" -->
<!--             address="${WIRETAP_1_NOTIFY_OUTBOUND_URL}"  -->
<!--             exchange-pattern="request-response" -->
<!--             responseTimeout="${SERVICE_TIMEOUT_MS}" -->
<!--             transformer-refs="logReqOut" -->
<!--             responseTransformer-refs="logRespIn" doc:name="HTTP"> -->

<!--             <jms:transaction action="ALWAYS_JOIN"/> -->
<!--         </http:outbound-endpoint> -->


        <https:outbound-endpoint 
            connector-ref="soitoolkit-https-connector"
            address="${WIRETAP_1_NOTIFY_OUTBOUND_URL}" 
            exchange-pattern="request-response"
            responseTimeout="${SERVICE_TIMEOUT_MS}"
            transformer-refs="logReqOut"
            responseTransformer-refs="logRespIn">
            
            <jms:transaction action="ALWAYS_JOIN"/>
        </https:outbound-endpoint>
        
        
        
        <!-- Logs unsuccessful http requests when trying to notify WIRETAP_1_NOTIFY_OUTBOUND_URL. Will not log exceptions.  -->
		<choice doc:name="Choice">

			<when expression="#[message.inboundProperties['http.status'] >= 400]">
			
				<object-to-string-transformer doc:name="Object to String"/>
			
				<!-- Save payload for logging -->
				<set-property propertyName="RequestPayload" value="#[variable:request]" doc:name="Property"/>

				<!-- We need to treat http_stats >= 400 as an exception, so we need throw an exception here -->
				<component doc:name="Java" class="se.skltp.services.anp.intyg.wiretap.WiretapExceptionThrower" />
				
			</when>
			<otherwise>
			
				<!--  The transformer is needed for handling the problem with hanging VP. -->
				<object-to-string-transformer doc:name="Object to String"/>
				<logger level="DEBUG" message="Notify successful!" doc:name="Logger"/>
				
			</otherwise>
		</choice>

		<!-- Custom strategy for adding even more information to the EventLogMessage -->
		<custom-exception-strategy class="se.skltp.services.anp.intyg.wiretap.WiretapCustomNotifierExceptionStrategy">
			<spring:property name="logNotifyPayloads" value="${LOG_NOTIFY_PAYLOADS}" />
		</custom-exception-strategy>
    </flow>
    
    <flow name="notify-2-service" doc:name="notify-2-service">
        <jms:inbound-endpoint 
            connector-ref="soitoolkit-jms-connector"
            queue="${WIRETAP_2_QUEUE}" 
            doc:name="JMS Queue">
            <jms:transaction action="ALWAYS_BEGIN"/>
        </jms:inbound-endpoint>

		<!--  Set the name of this wiretap service for logging purposes -->
		<set-variable variableName="wiretap-name" value="${WIRETAP_2_NAME}" doc:name="Set name"/>

		<!--  Log incoming request now when the wiretap-name is set -->
		<transformer ref="logMsgIn" doc:name="Transformer Reference"/>
 		
 		<set-property propertyName="x-rivta-original-serviceconsumer-hsaid" value="${WIRETAP_ORIGINAL_HSA_ID}" doc:name="x-rivta-original-serviceconsumer-hsaid" />

		<custom-transformer  class="se.skltp.services.anp.intyg.wiretap.LogicalAddressTransformer" doc:name="Java">
			<spring:property
            	name="newLogicalAddress"
            	value="${WIRETAP_2_NOTIFY_OUTBOUND_LOGICAL_ADDRESS}" />
		</custom-transformer>

		<!-- Save the payload before sending it -->
		<set-variable variableName="request" value="#[payload]" doc:name="Save Request"/>
        
        
        <!-- Used for testing -->
<!--         <http:outbound-endpoint  -->
<!--             connector-ref="soitoolkit-http-connector" -->
<!--             address="${WIRETAP_1_NOTIFY_OUTBOUND_URL}"  -->
<!--             exchange-pattern="request-response" -->
<!--             responseTimeout="${SERVICE_TIMEOUT_MS}" -->
<!--             transformer-refs="logReqOut" -->
<!--             responseTransformer-refs="logRespIn" doc:name="HTTP"> -->

<!--    			<jms:transaction action="ALWAYS_JOIN"/> -->
<!--         </http:outbound-endpoint> -->
        
        
        <https:outbound-endpoint 
            connector-ref="soitoolkit-https-connector"
            address="${WIRETAP_2_NOTIFY_OUTBOUND_URL}" 
            exchange-pattern="request-response"
            responseTimeout="${SERVICE_TIMEOUT_MS}"
            transformer-refs="logReqOut"
            responseTransformer-refs="logRespIn">
            
            <jms:transaction action="ALWAYS_JOIN"/>
        </https:outbound-endpoint>


        <!-- Logs unsuccessful http requests when trying to notify WIRETAP_2_NOTIFY_OUTBOUND_URL. Will not log exceptions.  -->
		<choice doc:name="Choice">

			<when expression="#[message.inboundProperties['http.status'] >= 400]">
			
				<object-to-string-transformer doc:name="Object to String"/>
			
				<!-- Save payload for logging -->
				<set-property propertyName="RequestPayload" value="#[variable:request]" doc:name="Property"/>

				<!-- We need to treat http_status >= 400 as an exception, so we need throw an exception here -->
				<component doc:name="Java" class="se.skltp.services.anp.intyg.wiretap.WiretapExceptionThrower" />
				
			</when>
			<otherwise>
			
				<!--  The transformer is needed for handling the problem with hanging VP. -->
				<object-to-string-transformer doc:name="Object to String"/>
				<logger level="DEBUG" message="Notify successful!" doc:name="Logger"/>
				
			</otherwise>
		</choice>

		<!-- Custom strategy for adding even more information to the EventLogMessage -->
		<custom-exception-strategy class="se.skltp.services.anp.intyg.wiretap.WiretapCustomNotifierExceptionStrategy">
			<spring:property name="logNotifyPayloads" value="${LOG_NOTIFY_PAYLOADS}" />
		</custom-exception-strategy>
    </flow>

</mule>